spring:
  application:
    name: Gestionpersonal-backend
  datasource:
    url: jdbc:postgresql://localhost:5432/gestionpersonal
    username: postgres
    password: 123
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    hibernate:
      ddl-auto: create
    show-sql: true
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
  messages:
    basename: messages
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  ai:
    openai:
      api-key: ${OPENAPI_KEY}
      chat:
        model: gpt-4o-mini-2024-07-18
        options:
          model: gpt-4o-mini-audio-preview
          output-modalities:
            - text
            - audio
          output-audio:
            voice: alloy
            format: wav
    mcp:
      client:
        stdio:
          connections:
            postgresql:
              command: docker
              args:
                - "run"
                - "-i"
                - "--rm"
                - "mcp/postgres"
                - "postgresql://postgres:123@host.docker.internal:5432/gestionpersonal"
#    mcp:
#      client:
#        sse:
#          enabled: true
#          connections:
#            author-tools-server:
#              url: http://localhost:8081

server:
  port: 8080

default:
  role: EMPLOYEE

jwt:
  expiration:
    minutes: 60
  secret:
    key: aG9sYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWE=

qrcode:
  storage:
    path: src/main/resources/static/qrCodes/

email:
  sender: cristian.28hedz@gmail.com
  password: acvdqbeanhzbkqtd

google:
  clientId: ${GOOGLE_CLIENT_ID}
  secretId: ${GOOGLE_SECRET_ID}

secretPsw: ${SECRET_PSW}